library(TTR)
# Load in data
frame<-read.csv("PatientArrivals.csv")
head(frame)
# Compute simple moving average with 3 periods
sma.pred<-SMA(frame$Patient.arrival, n=3) # SMA() calculates the simple moving average. n = 3
# indicates that we want to calculate the average over 3 periods. Note that this moving average # weights each data point equally.
print(sma.pred) #note that the forecast is inserted at the beginning of this array
# Plot the moving average
plot(sma.pred , type="l",col=2, ylim=c(450,510), xlim=c(0,30), xlab="days", ylab="patients")
# Add the original data to the plot
lines(frame$Patient.arrival) # note that the moving average is plotted at the last of the three periods used to compute it
sma.pred<-SMA(c(6,8,7,10,11,14), n=3)
sma.pred
28/3
35/3
library(dplyr)
library(tibble)
library(tree)
library(ISLR)
carseats <- as_tibble(Carseats)
head(carseats)
seats <- as_tibble(Carseats) %>% mutate(High = as.factor(Sales > 8))
carseats
carseats <- as_tibble(Carseats)
carseats
ncol(carseats)
nrow(carseats)
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
#
ncol(carseats)
nrow(carseats)
summary(carseats)
#multiple regression
frame<-read.csv("LifeExpPlus.csv", row.names = 1) #Load the Life Expectancy Data Set
head(frame) #Examine the Life Expectancy Data Set
#multiple regression
frame<-read.csv("/Users/chiaentsai/Desktop/Data_Analytics/Data_Analytics_Code/full_linnear_regression_model/LifeExpPlus.csv", row.names = 1) #Load the Life Expectancy Data Set
head(frame) #Examine the Life Expectancy Data Set
cor(carseats, method="pearson")
#multiple regression
frame<-read.csv("/Users/chiaentsai/Desktop/Data_Analytics/Data_Analytics_Code/full_linnear_regression_model/LifeExpPlus.csv", row.names = 1) #Load the Life Expectancy Data Set
head(frame) #Examine the Life Expectancy Data Set
cor(frame, method="pearson") #Look at the correlation matrix for all variables in this data set
plot(x=frame$GDP.per.capita, y=frame$AvgLifeExp) # Plot the GDP/Capita and Avg life expectancy. Note that weâ€™ve called these columns of data from our dataframe with the notation dataset$ColumnName.
plot(x=frame$logGDP, y=frame$AvgLifeExp)
cor(frame, method="pearson") #Look at the correlation matrix for all variables in this data set
cor(carseats, method="pearson")
head(carseats)
#multiple regression
frame<-read.csv("/Users/chiaentsai/Desktop/Data_Analytics/Data_Analytics_Code/construct_full_model/LifeExpPlus.csv", row.names = 1) #Load the Life Expectancy Data Set
head(frame) #Examine the Life Expectancy Data Set
cor(frame, method="pearson") #Look at the correlation matrix for all variables in this data set
head(carseats)
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
head(carseats)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
which(is.na(carseats))
which(is.na(carseats))
sum(is.na(carseats))
which(is.na(carseats))
sum(is.na(carseats))
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
carseats$ShelveLoc <- dummy_cols(carseats$ShelveLoc)
carseats$ShelveLoc <- dummy_columns(carseats$ShelveLoc)
library(fastDummies)
install.packages(fastDummies)
install.packages("fastDummies")
library(fastDummies)
carseats$ShelveLoc <- dummy_columns(carseats$ShelveLoc)
carseats
frame <- subset(carseats, select = -ShelveLoc$.data)
frame <- subset(carseats, select = -ShelveLoc)
frame
carseats
frame <- subset (carseats, select = -ShelveLoc$.data)
frame <- subset (carseats, select = -ShelveLoc.data)
carseats$ShelveLoc
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
dummy_columns(carseats$ShelveLoc)
dummy_columns(carseats$ShelveLoc)$data_Bad
$data_Bad
dummy_cols(carseats$ShelveLoc)
dummy_cols(carseats$ShelveLoc).value
dummy_cols(carseats, select_columns = "ShelveLoc",
remove_first_dummy = TRUE)
dummy_cols(carseats, select_columns = "ShelveLoc")
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame
frame <- subset(frame, select = -"ShelveLoc")
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -"ShelveLoc")
frame <- subset(frame, select = -c("ShelveLoc"))
frame <- subset(frame, select = -c(ShelveLoc))
frame
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# linear regression
linear_model<-lm(Sales ~., data=frame)
summary(model)
summary(linear_model)
anova_model<-anova(model_linear)
# linear regression
model_linear<-lm(Sales ~., data=frame)
summary(model_linear)
anova_model<-anova(model_linear)
anova_model
library(DAAG)
# k-fold validation for linear regression
cvoutput<-cv.lm(data = frame, model_linear, m=5,  printit = TRUE)
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# linear regression
model_linear<-lm(Sales ~., data=frame)
summary(model_linear)
anova_model<-anova(model_linear)
anova_model
# k-fold validation for linear regression
cvoutput<-cv.lm(data = frame, model_linear, m=5,  printit = TRUE)
pairs(data=frame)
pairs(data=frame, Sales)
pairs(data=frame, frame$Sales)
pairs(data=frame, Sales~)
pairs(data=frame, Sales~.)
pairs(data=frame, Sales + Income)
pairs(frame)
frame
pairs(Sales~ CompPrice + Income)
pairs(Sales~ CompPrice + Income, data = frame)
pairs(Sales~ CompPrice + Income + Advertising +Population +Price+Age+Education , data = frame)
pairs(Sales~ CompPrice + Income + Advertisin +Price+Education , data = frame)
pairs(Sales~ CompPrice + Income + Advertising +Price+Education , data = frame)
pairs(Sales~ CompPrice + Income + Advertising +Population +Price+Age+Education , data = frame)
# clustering
dist<-get_dist(frame, method="euclidean")
library(MASS)
library(factoextra)
library(ggplot2)
library(MASS)
library(factoextra)
# clustering
dist<-get_dist(frame, method="euclidean")
as.matrix(dist)
fviz_dist(dist)
1+1
str(cluster)
plot(frame,col=cluster)
cluster<-kmeans(dist,centers=3,nstart=1)
plot(frame,col=cluster)
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# clustering
dist<-get_dist(frame, method="euclidean")
as.matrix(dist)
fviz_dist(dist)
cluster<-kmeans(dist,centers=2,nstart=1)
plot(frame,col=cluster)
head(frame)
summary(model_linear)
anova_model<-anova(model_linear)
anova_model
