corr <- cor(frame)
ggcorrplot(corr)
vif(lm(Sales ~. , data=frame))
library(dplyr)
library(tibble)
library(tree)
library(ISLR)
library(tibble)
library(ISLR)
library(fastDummies)
library(DAAG)
library(ggplot2)
library(MASS)
library(factoextra)
library(carData)
library(car)
library(ggcorrplot)
vif(lm(Sales ~. , data=frame))
# check multicolinearity
corr <- cor(frame)
corr
# linear regression
model_linear<-lm(Sales ~CompPrice+Income., data=frame)
# linear regression
model_linear<-lm(Sales ~"CompPrice"+ "Income"., data=frame)
# linear regression
model_linear<-lm(Sales ~CompPrice+ Income, data=frame)
library(ggcorrplot)
vif(lm(Sales ~ CompPrice + Income, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good + ShelveLoc_Medium, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
# linear regression
model_linear<-lm(Sales ~., data=frame)
summary(model_linear)
# k-fold validation for linear regression
cvoutput<-cv.lm(data = frame, model_linear, m=5,  printit = TRUE)
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
ggcorrplot(corr)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good + ShelveLoc_Medium, data=frame))
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
frame
ncol(frmae)
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
ncol(frmae)
ncol(frame)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5,  printit = TRUE)
cvoutput<-cv.lm(data = frame, model_linear, m=5)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
#k-fold validation full model without education spending
frame<-read.csv("LifeExpPlus.csv", row.names = 1)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
ggcorrplot(corr)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
#k-fold validation full model without education spending
frame<-read.csv("/Users/chiaentsai/Desktop/Data_Analytics/Data_Analytics_Code/kfold_validation/LifeExpPlus.csv", row.names = 1)
povinc<-frame$Inequity*frame$PovertyRate
frame$povinc=povinc
sol<-lm(AvgLifeExp ~logGDP+Inequity +PovertyRate+povinc, data=frame) #note that
# in this function, the data is specified as coming from the object frame, so $ sign notation is not necessary
print(sol) #model output
anova_sol<-anova(sol)
anova_sol #anova table for this model
library(DAAG)
fit<-lm(AvgLifeExp ~logGDP+Inequity +PovertyRate+povinc, data=frame)
cvoutput<-cv.lm(data = frame, fit, m=5,  printit = TRUE) #perform k-fold validation
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
ncol(frame)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
summary(model_linear)
anova_model<-anova(model_linear)
anova_model
# remove high p-value variables
frame <- subset(frame, select = -c(Population, Education, Urban, US) )
model_linear<-lm(Sales ~., data=frame)
summary(model_linear)
model_linear$residuals
model_linear$df.residual
model_linear$residuals
sum(model_linear$residuals)
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
ncol(frame)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
summary(model_linear)
anova_model<-anova(model_linear)
anova_model
# remove high p-value variables
frame2 <- subset(frame, select = -c(Population, Education, Urban, US) )
model_linear2<-lm(Sales ~., data=frame2)
deviance(model_linear)
RSS(model_linear)
sum(resid(model_linear)^2)
deviance(model_linear)
# calculate the residaul sum of squares
sum(resid(model_linear)^2)
deviance(model_linear)
# remove high p-value variables
frame2 <- subset(frame, select = -c(Population, Education, Urban, US) )
model_linear2<-lm(Sales ~., data=frame2)
sum(resid(model_linear2)^2)
deviance(model_linear2)
# load the carseats data
carseats <- as_tibble(Carseats)
head(carseats)
# have a look of the data
ncol(carseats)
nrow(carseats)
which(is.na(carseats))
sum(is.na(carseats))
summary(carseats)
# create dummy variables for categorical variables
carseats$Urban<-ifelse(carseats$Urban=="Yes",1,0)
carseats$US<-ifelse(carseats$US=="Yes",1,0)
carseats
frame <- dummy_cols(carseats, select_columns = "ShelveLoc")
frame <- subset(frame, select = -c(ShelveLoc) )
frame
# check multicolinearity
# remove ShelveLoc_Medium cause it is highly correlated with ShelveLoc_Good
corr <- cor(frame)
corr
ggcorrplot(corr)
vif(lm(Sales ~ CompPrice + Income + Advertising + Population+Price+Age+Education
+ Urban + US + ShelveLoc_Bad + ShelveLoc_Good, data=frame))
frame <- subset(frame, select = -c(ShelveLoc_Medium) )
frame
ncol(frame)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
summary(model_linear)
# calculate the residaul sum of squares
sum(resid(model_linear)^2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=5)
library(leaps)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=5)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=8)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=9)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=10)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=11)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=12)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
choices<-summary(models)
choices$which
#anova analysis
anova_model<-anova(model_linear)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=12)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
frame
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=12)
choices<-summary(models)
print(choices$which)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=14)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=14
)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=14)
choices<-summary(models)
print(choices$which)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=18)
choices<-summary(models)
print(choices$which)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=11)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
frame
print(choices$which)
print(choices$adjr2)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
summary(model_linear)
# calculate the residaul sum of squares
sum(resid(model_linear)^2)
# best subset selection
models<-regsubsets(Sales ~., data=frame, method = "exhaustive", nvmax=11)
choices<-summary(models)
print(choices$which)
print(choices$adjr2)
#anova analysis
anova_model<-anova(model_linear)
anova_model
summary(model_linear)
# linear regression & k-fold validation
model_linear<-lm(Sales ~., data=frame)
cvoutput<-cv.lm(data = frame, model_linear, m=5, printit = TRUE)
summary(model_linear)
#PCA
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
biplot(Sol) #biplot
fviz_pca_var(Sol) #correlation circle
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
biplot(Sol) #biplot
fviz_pca_var(Sol) #correlation circle
fviz_eig(Sol) #Scree plot
install.packages("GPArotation")
library(psych)
library(GPArotation)
# Factor Analysis
#1 Factor
SolFact<-factanal(frame, factors=1, cvar=FALSE, method="mle")
SolFact
#2 FACTORS
SolFact<-factanal(frame, factors=2, method="mle")
SolFact
#2 FACTORS
SolFact<-factanal(frame, factors=3, method="mle")
SolFact
#2 FACTORS
SolFact<-factanal(frame, factors=4, method="mle")
SolFact
#2 FACTORS
SolFact<-factanal(frame, factors=5, method="mle")
SolFact
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
#Clustering
dist<-get_dist(frame, method="euclidean") # compute distance matrix
fviz_dist(dist) # visualize distance matrix with a heatmap
set.seed(35) # set seed to guarantee reproducibility
fviz_dist(dist) # visualize distance matrix with a heatmap
#Clustering
dist<-get_dist(frame, method="euclidean") # compute distance matrix
fviz_dist(dist) # visualize distance matrix with a heatmap
set.seed(35) # set seed to guarantee reproducibility
print(cluster)
cluster<-kmeans(frame,centers=2,nstart=15)
print(cluster)
# Visualize clusters
plot(cluster,col=cluster)
# Visualize clusters
plot(cluster,col=cluster)
# Factor Analysis
#1 Factor
SolFact<-factanal(frame, factors=1, cvar=FALSE, method="mle")
SolFact
#2 FACTORS
SolFact<-factanal(frame, factors=5, method="mle")
SolFact
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
# Factor Analysis
#1 Factor
SolFact<-factanal(frame, factors=1, cvar=FALSE, method="mle")
SolFact
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
biplot(Sol) #biplot
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
print(Sol)
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
biplot(Sol) #biplot
fviz_eig(Sol) #Scree plot
print(Sol)
print(Sol)
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
print(Sol)
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
Sol$sd^2#print eigenvalues
fviz_pca_var(Sol) #correlation circle
fviz_eig(Sol) #Scree plot
fviz_pca_var(Sol) #correlation circle
Sol<-princomp(frame, cor=TRUE, scores=TRUE)
print(Sol)
print(Sol$loadings) #print eigenvectors
print(Sol)
print(Sol$loadings) #print eigenvectors
fviz_eig(Sol) #Scree plot
print(Sol)
biplot(Sol) #biplot
fviz_pca_var(Sol) #correlation circle
fviz_eig(Sol) #Scree plot
fviz_pca_var(Sol) #correlation circle
fviz_eig(Sol) #Scree plot
fviz_pca_var(Sol) #correlation circle
