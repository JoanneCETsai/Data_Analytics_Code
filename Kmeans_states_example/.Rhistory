library(MASS)
library(factoextra)
library(maps)
library(mapdata)
library(ggplot2)
library(ggmap)
frameNoDC<-read.csv("FourAttributeDataNoDC.csv", row.names=1)
frameNoDC<-read.csv("FourAttributeDataNoDC.csv", row.names=1)
head(frameNoDC)
dist.euclideanNoDC<-get_dist(frameNoDC, method="euclidean") # compute distance matrix
fviz_dist(dist.euclideanNoDC) # visualize distance matrix with a heatmap
set.seed(35) # set seed to guarantee reproducibility
# Run Kmeans with 2 clusters
ExampleClusterframeNoDC<-kmeans(frameNoDC,centers=2,nstart=15)
print(ExampleClusterframeNoDC)
# Visualize clusters
plot(frameNoDC,col=ExampleClusterframeNoDC$cluster)
# Visualize clusters
plot(frameNoDC,col=ExampleClusterframeNoDC$cluster)
# Read in a data frame containing various clustering results and geographic info
framestates<-read.csv("states.csv")
head(framestates)
# Plot cluster assignments geographically
ggplot(data=framestates)+
geom_polygon(aes(x=long,y=lat,fill=factor(X3Clusters),group=group), color="white") +
coord_fixed(1.3) + labs(fill='Cluster')
library(MASS)
library(factoextra)
frameNoDC <- read.csv("FourAttributeDataNoDC.csv", row.names=1)
head(frameNoDC)
# Compute distance matrix using Euclidean distance
dist.euclideanNoDC <- get_dist(frameNoDC, method="euclidean")
# Visualize distance matrix with a heatmap
fviz_dist(dist.euclideanNoDC)
# Carry out hierarchical clustering
hc <- hclust(get_dist(frameNoDC, method="euclidean"), "average")
fviz_dend(hc) # visualize cluster dendrogram
clusters <- cutree(hc,k=5) # choose the desired number of clusters and cut the tree
plot(frameNoDC,col=clusters) # plot the clusters
states.coph<-cophenetic(hc) # distances from the dendrogram
fviz_dist(states.coph) # Visualize dendrogram distances with a heatmap
cor(get_dist(frameNoDC, method="euclidean"),states.coph) # correlation between dendrogram distances and euclidean distances
fviz_dist(states.coph) # Visualize dendrogram distances with a heatmap
library(MASS)
library(factoextra)
library(cluster)
library(cluster)
frameNoDC<-read.csv("FourAttributeDataNoDC.csv", row.names=1)
head(frameNoDC)
# Compute distance matrix with euclidean distance
dist.euclideanNoDC<-get_dist(frameNoDC, method="euclidean")
fviz_dist(dist.euclideanNoDC) # visualize distance matrix with a heatmap
# Carry out divisive clustering algorithm
dc<-diana(dist.euclideanNoDC,diss=TRUE,metric="euclidean")
plot(dc) # Visualize dendrogram (folow prompts to hit return key in the console to print the plot)
plot(dc) # Visualize dendrogram (folow prompts to hit return key in the console to print the plot)
clusters <- cutree(dc,k=5) # specify the desired number of clusters
plot(frameNoDC,col=clusters) # plot the clusters
states.coph<-cophenetic(dc) # distances from the dendrogram
fviz_dist(states.coph) # Visualize dendrogram distances with a heatmap
cor(get_dist(frameNoDC, method="euclidean"),states.coph) # correlation between dendrogram distances and euclidean distances
