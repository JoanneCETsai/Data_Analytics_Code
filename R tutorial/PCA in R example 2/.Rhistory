#Gymnastics analysis all four events
library(factoextra)
frame1<-read.csv("GymnasticsData.csv", row.names = 1)
frame1<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/pca/GymnasticsData.csv", row.names = 1)
cor(frame1) #leaving ashton in generates issues because of missing data, which we see in the correlation matrix
#Gymnastics PCA analysis all four events NO Ashton Locklear
library(FactoMineR)
frame<-read.csv("GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
cor(frame) #correlation matrix with Ashton for comparison with when she is not included
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
cor(frame) #correlation matrix with Ashton for comparison with when she is not included
cor(frame1) #leaving ashton in generates issues because of missing data, which we see in the correlation matrix
cor(frame) #correlation matrix with Ashton for comparison with when she is not included
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
Sol$eig #print eigenvalues
fviz_eig(Sol) #Scree plot
Sol$var #prints coord, cor, cos2 and contrib-eigenvectors are coord/sqrt(eigenvalue)
Sol$var #prints coord, cor, cos2 and contrib-eigenvectors are coord/sqrt(eigenvalue)
fviz_pca_var(Sol, col.var="cos2") #correlation circle with cos2
Sol$ind$coord #individuals expressed by PCAs
fviz_pca_biplot(Sol, col.var="cos2") #coordinates of individuals in PCA space and correlations between PCA and variables
fviz_pca_biplot(Sol, col.ind="cos2") #coordinates of individuals in PCA space and correlations between PCA and variables
knitr::opts_chunk$set(echo = TRUE)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
# Create new data frames for prediction
SimoneNew = data.frame(Vault=31.2,Bars=29.4,Beam=30.1,Floor=29.15)
MorganNew = data.frame(Vault=28.8,Bars=29.15,Beam=27.65,Floor=27.7)
# Project Simone Biles and Morgan Hurd into the PCA space
predict(Sol,newdata=SimoneNew)
predict(Sol,newdata=MorganNew)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
Sol.var
print(Sol.var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol.var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
print(Sol$ind)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
Sol$ind$coord
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
print(Sol$ind$coord)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
print(Sol$var)
# First load the necessary packages
library(factoextra)
library(FactoMineR)
# Read in the data
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/PCA in R example 2/GymnasticsDataNoAshtonLocklear.csv", row.names = 1)
# Run PCA
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE)
Sol$var
Sol$ind
0.9404+0.0079
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/hw3/hw3_texas/TTI_dataset.csv", row.names = 1)
library(factoextra)
library(FactoMineR)
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/hw3/hw3_texas/TTI_dataset.csv", row.names = 1)
Sol<-PCA(frame, scale.unit=TRUE, graph=TRUE) # Run PCA
fviz_eig(Sol) # Scree plot
Sol$eig # Print eigenvalues
fviz_eig(Sol) # Scree plot
Sol$var # Prints coord, cor, cos2 and contrib-eigenvectors are coord/sqrt(eigenvalue)
Sol$ind$coord # Individuals expressed by PCAs
Sol$var # Prints coord, cor, cos2 and contrib-eigenvectors are coord/sqrt(eigenvalue)
Sol$ind$coord # Individuals expressed by PCAs
fviz_pca_var(Sol, col.var="cos2") # Correlation circle with cos2
fviz_pca_biplot(Sol, col.ind="cos2",label='ind') # Coordinates of indiviudals in PCA space and correlations between PCA and variables
Sol$ind$cos2
#Factor Analysis
#psych package
#GPArotation
library(psych)
#Factor Analysis
#psych package
#GPArotation
install.packages("psych")
library(psych)
library(GPArotation)
install.packages("GPArotation")
library(psych)
library(GPArotation)
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/R tutorial/factor_analysis/TestScores.csv")
#1 Factor
SolFact<-factanal(frame, factors=1, cvar=FALSE, method="mle")
SolFact
library(psych)
library(GPArotation)
frame<-read.csv("/Users/chiaentsai/Desktop/Data Analytics/hw3/smart_meter/Smart_Meter_data.csv")
SolFact<-factanal(frame, factors=1, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=2, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=3, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=4, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=5, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=6, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=4, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=5, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=6, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=5, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=6, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
SolFact<-factanal(frame, factors=6, cvar=FALSE, method="mle", rotation='varimax')
print(SolFact, digits=2, cutoff=0.2, sort=TRUE) #drop loadings of <0.2 from output
